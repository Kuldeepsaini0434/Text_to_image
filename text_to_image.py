# -*- coding: utf-8 -*-
"""Text_to_Image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18caM45qxkEFUbo1N35fz_oDz52rSDxF4
"""

!pip install --upgrade diffusers transformers accelerate scipy safetensors gradio --quiet

import torch
from diffusers import DiffusionPipeline
from PIL import Image
import time

# ‚ö° Load the SDXL pipeline
model_id = "stabilityai/stable-diffusion-xl-base-1.0"

# Use float16 only if GPU is available
dtype = torch.float16 if torch.cuda.is_available() else torch.float32
device = "cuda" if torch.cuda.is_available() else "cpu"

pipe = DiffusionPipeline.from_pretrained(
    model_id, torch_dtype=dtype, variant="fp16" if dtype==torch.float16 else None, use_safetensors=True
)
pipe.to(device)

# üéØ Define the function to generate image
def generate_image(prompt):
    start = time.time()
    image = pipe(prompt=prompt).images[0]
    image.save("sdxl_output.png")
    end = time.time()
    print(f"‚úÖ Image generated in {round(end - start, 2)} seconds.")
    return image

# üîç Test it
img = generate_image("A futuristic cyberpunk city skyline at night, highly detailed, 4k")
img.show()

img.show()

!pip install pyngrok --quiet
!pip install flask_cors --quiet

from pyngrok import ngrok
import os

# Get your authtoken from https://dashboard.ngrok.com/get-started/your-authtoken
NGROK_AUTH_TOKEN = "32gB8hBzPc5D8118dkwyfU2vpLM_3VvWPGYy3FEZb76LY17ds"

# Authenticate ngrok
ngrok.set_auth_token(NGROK_AUTH_TOKEN)

# Now you can connect to ngrok
# public_url = ngrok.connect(5000).public_url
# print("‚úÖ API URL:", public_url)

from flask import Flask, request, jsonify
from flask_cors import CORS
from io import BytesIO
import base64
import threading
from pyngrok import ngrok

app = Flask(__name__)
CORS(app)  # allow frontend calls

@app.route("/generate", methods=["POST"])
def generate_route():
    data = request.get_json(force=True)
    prompt = data.get("prompt", "")
    img = generate_image(prompt)  # PIL image

    # Convert to Base64 so frontend can display
    buf = BytesIO()
    img.save(buf, format="PNG")
    b64_img = base64.b64encode(buf.getvalue()).decode("utf-8")
    return jsonify({"image": b64_img})

# üî• Run Flask with ngrok
def run_app():
    app.run(port=5000)

public_url = ngrok.connect(5000).public_url
print("‚úÖ API URL:", public_url)

threading.Thread(target=run_app).start()

#now check your backend connectivity

import requests
res = requests.post("https://4de8df304470.ngrok-free.app/generate",
                    json={"prompt": "A dog playing chess"})
print(res.json().keys()) 



